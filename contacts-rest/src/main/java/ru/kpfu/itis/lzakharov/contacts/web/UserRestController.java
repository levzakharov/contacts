package ru.kpfu.itis.lzakharov.contacts.web;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import ru.kpfu.itis.lzakharov.contacts.model.User;import ru.kpfu.itis.lzakharov.contacts.service.UserService;import java.util.List;@CrossOrigin("http://localhost:3000")@RestController@RequestMapping("/api")public class UserRestController {    @Autowired    UserService userService;    @RequestMapping(value = "/users", method = RequestMethod.GET)    public ResponseEntity<List<User>> getAll() {        List<User> users = userService.findAll();        return new ResponseEntity<>(users, HttpStatus.OK);    }    @RequestMapping(value = "/users/{login}", method = RequestMethod.GET)    public ResponseEntity<User> get(@PathVariable("login") String login) {        User user = userService.find(login);        if (user == null) {            return new ResponseEntity<>(HttpStatus.NOT_FOUND);        }        return new ResponseEntity<>(user, HttpStatus.OK);    }    @RequestMapping(value = "/users", method = RequestMethod.POST)    public ResponseEntity<Void> create(@RequestBody User user) {        if (userService.isUserExist(user)) {            return new ResponseEntity<>(HttpStatus.CONFLICT);        }        userService.create(user);        return new ResponseEntity<>(HttpStatus.CREATED);    }    @RequestMapping(value = "/users/{login}", method = RequestMethod.PUT)    public ResponseEntity<User> update(@PathVariable("login") String login, @RequestBody User user) {        User currentUser = userService.find(login);        if (currentUser == null) {            return new ResponseEntity<>(HttpStatus.NOT_FOUND);        }        currentUser.setFullName(user.getFullName());        userService.update(currentUser);        return new ResponseEntity<>(currentUser, HttpStatus.OK);    }    @RequestMapping(value = "/users/{login}", method = RequestMethod.DELETE)    public ResponseEntity<Void> delete(@PathVariable("login") String login) {        User user = userService.find(login);        if (user == null) {            return new ResponseEntity<>(HttpStatus.NOT_FOUND);        }        userService.delete(login);        return new ResponseEntity<>(HttpStatus.OK);    }}